// Code generated for package tpls by go-bindata DO NOT EDIT. (@generated)
// sources:
// tpls/cover.jpg
// tpls/epub_cover.css
// tpls/tpl_book_toc.html
// tpls/tpl_chapter.html
// tpls/tpl_content.opf
// tpls/tpl_cover.html
// tpls/tpl_style.css
// tpls/tpl_toc.ncx
// tpls/tpl_volume.html
package tpls

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _tplsCoverJpg = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9a\x79\x7c\x13\xd5\xfb\xef\x9f\x99\xc9\xda\xa6\xfb\xc2\x0e\x69\xba\xb2\x74\x49\xda\xa4\x4d\xa0\xb4\x4d\x9a\xb6\x01\x4a\x4b\x5b\x5a\x40\x14\xd2\x64\x9a\x06\xb2\x91\x4c\xba\xa0\x22\x60\x41\x01\x15\x29\x8b\x6c\xca\x2a\xab\x5f\x50\x94\xd5\x95\x4d\x44\xf9\x22\xfb\xe6\xd6\x82\x08\xb8\x60\x11\x59\x04\xb5\xf7\x35\x93\x26\x2d\x8b\xca\xf5\xce\xfd\xe7\xf7\x3b\x87\x17\x33\x67\x9e\xf3\x9c\x33\xe7\xbc\xe7\xcc\xf4\x73\xce\x93\xd6\x33\xad\xcd\x21\x94\xb6\xce\x5c\x05\x50\x58\x08\x7d\x00\x40\x00\x22\x0c\x80\x00\x00\x0c\x6b\xa2\x0f\x9e\x3c\x3e\x99\x3e\x30\x79\xfa\xff\x6b\x18\xcf\x63\x07\x1c\x00\x0b\x6d\xcb\x63\x00\x58\x44\x5b\x9e\x00\xc0\xba\x02\x97\xc9\x03\xac\xc6\xba\xf9\xf2\x6f\x60\x09\x1d\xea\x4a\xe9\x23\xf4\x04\x80\x77\x30\x19\x93\x0f\x07\x80\x63\xcf\x99\x81\xd3\xe6\x7f\x19\x00\x13\x83\x80\xf9\xe7\xf7\xfb\x64\x80\xf8\x60\xef\x39\xc7\x68\xaf\x24\xc5\xc5\xd5\x76\xca\xee\xaa\xb6\x3b\xc4\x9a\x52\x85\x38\xa1\xc2\x6c\x33\xda\x6b\x5d\xbd\x41\x96\x22\x55\xaa\xa4\x32\x95\x4c\x2e\x96\xa5\xa8\xa4\x69\xaa\x34\x05\x00\x00\xe7\x65\x00\x3e\x7d\x4e\x91\xc9\xa4\xcb\xb1\xf6\xbe\x2f\xc7\xbd\xf7\xc4\xcd\xcb\x09\x6f\x9e\x60\x2a\x01\x00\x0f\x23\xda\x7c\x79\x1d\xc7\x86\xd9\xda\xc7\x86\xd5\x74\x1c\x1b\x8e\x79\xdb\xc0\x26\xe1\xbe\xb6\x83\xae\xb6\xb5\x57\xd0\x36\x3e\xe6\xdc\x7a\xa6\xf5\xbc\x68\x84\x4e\xa3\x19\x53\x5c\x52\x94\xa7\x1b\xa2\xa5\xc9\x83\xa8\x60\x88\xd9\x66\xc7\x83\x01\xac\x36\xca\x59\x92\xaf\x16\x8f\x18\x39\x4a\xcc\x3f\x0c\x38\x08\x81\x07\x52\x00\xbd\xc1\xe5\x28\x2c\xcd\x2b\xa3\x1b\xd4\x69\x35\x62\x57\x49\xbe\x1a\xee\x49\x37\x4f\x31\x77\x81\xe3\x89\x05\xc5\x62\x31\xfc\xdf\xa5\x10\x83\xc3\x49\x01\x60\xc5\x00\x90\x6a\x24\x5d\x06\x00\xac\x01\x00\x2c\xb5\x94\x83\xb6\xb7\xd0\xcf\xab\x72\x3c\x9d\xc7\xe9\xf1\x85\x3b\x47\x8c\x1c\x05\x80\x77\xa6\xf3\x26\x4f\xbe\x1f\xe3\xe3\xc9\x67\xd3\x79\xa3\xd5\x66\x04\xc0\xe9\x3e\x3b\x8c\x56\x23\x9d\xdf\x07\x00\xcf\xd7\xb8\x49\x23\x00\x31\x04\x00\xa6\xd7\x98\xc9\x5a\x00\xe2\x04\x00\xc4\x58\xdc\x56\x33\x00\x71\x9b\xae\x6b\x25\xf5\x2e\x00\x8e\x88\xb6\x53\xa4\xa1\x9a\x7e\x8c\x00\x20\x72\x96\x95\x68\x00\x38\x03\x00\x04\x22\x53\x87\x7c\x65\x87\x3c\x45\xd6\x51\xf4\xa0\x34\x76\x47\xbd\xd3\x6c\xaa\xa6\xc4\x09\x86\xde\x62\xa9\x52\x99\x21\x2e\x20\x6b\x2d\x24\x45\x25\x16\xeb\x0d\xe3\xf5\x4e\xa3\x58\x63\xb7\x3a\xf4\xb6\x7a\x00\xcf\x98\x99\x14\x4a\xb3\x15\xeb\xb4\x1a\x85\x54\xa9\x50\x24\xca\x92\xa4\x1d\x40\xfd\x6d\xe1\x23\x26\xfa\xd9\x7a\x72\xd7\x87\x31\xcf\x0c\x8b\x3c\xd4\x6e\x7b\x98\x9f\x7d\x25\x40\xc6\x0d\x00\xe2\xe5\x76\x5b\xe5\x22\x80\xed\xd3\x00\x3a\x9f\x6b\xb7\xc5\x2c\x07\x08\x6a\x00\xd8\xf6\x79\x87\xf1\x44\xd2\xf3\xa5\x9a\xa2\x1c\xaa\xe4\xe4\xda\xda\xda\x24\x33\x69\x48\xa2\x81\xfa\xd2\x3f\x3a\x3c\x42\xea\x70\xbf\x24\xba\x39\x1f\x1e\x71\x2e\x59\xa5\x77\x5b\x28\x31\xcd\xcd\x60\xb7\xd8\xdd\x4e\xb1\xcb\xa1\x37\x90\xe2\xc4\xfb\x27\xf1\xbf\xae\xf8\xf0\x7e\xf4\x2b\x21\xab\x48\x27\x69\x33\x90\xe2\x72\x33\x59\x6b\xb6\x99\xc4\x1a\xbb\xcd\x68\xa6\xcc\x76\x9b\xd8\x6c\xfb\xab\x87\xf8\x2f\xab\xdd\x97\x3c\xf3\x1a\x00\xc2\x56\xff\x09\xe1\x63\x92\x20\xf8\xf3\x70\x20\x7e\x3a\x04\x9c\x30\x7f\x20\x46\xbf\x46\x3f\x75\xdf\x73\x1b\x22\x2c\x07\xfa\xcd\xab\xe8\x75\xc9\x33\xef\x99\x84\x3d\xd8\x2a\x3e\x9b\x3e\xb8\xcc\x26\xa6\x9e\xa6\xa4\x4c\x6c\x70\x3b\x6b\x3c\x65\xf4\x6b\x09\x5c\xf0\x83\x20\x08\x87\x2e\xd0\x13\xa2\x21\x01\x12\x41\x06\xe9\xd0\x1f\xb2\x41\x0b\x83\xa0\x08\xca\x60\x24\x3c\x01\x06\xa8\x06\x2b\x38\xa1\x16\x9e\x82\x29\x30\x1d\x66\xc1\xcb\x30\x1f\x16\xc3\x32\x58\x0d\xeb\x61\x13\x6c\x81\xed\xf0\x1e\xec\x86\x8f\xe1\x33\x38\x02\x27\xe1\x0b\x68\x82\x8b\xf0\x03\xb4\xc0\x4d\xb8\x8b\x61\x18\x1f\x0b\xc0\xc2\xb0\x2e\x58\x2f\x2c\x16\xeb\x8b\xc9\xb0\x0c\x6c\x20\xa6\xc5\x86\x60\x25\xd8\x48\x6c\x2c\x66\xc2\x6c\x98\x1b\x7b\x0a\x7b\x16\x9b\x85\x35\x62\x8b\xb1\x15\xd8\x7a\xec\x2d\x6c\x27\xb6\x1b\x3b\x88\x1d\xc5\xce\x62\xcd\xd8\x15\xec\x17\xec\x0e\x4e\xe0\x22\x3c\x1c\xef\x81\xc7\xe1\xc9\x78\x06\x9e\x83\x0f\xc6\xcb\xf0\xc7\x71\x13\x3e\x01\x9f\x88\x37\xe0\x2f\xe1\x0b\xf1\x95\xf8\x1b\xf8\x36\x7c\x37\xfe\x19\x7e\x12\x6f\xc2\x7f\xc0\x6f\x10\x40\xf8\x13\x91\x44\x14\x91\x48\x64\x10\x1a\xa2\x88\x18\x45\x54\x11\x4e\x62\x12\x31\x93\x58\x40\xac\x24\x36\x11\xbb\x88\x03\xc4\x71\xa2\x89\xf8\x91\xf8\x8d\xc3\xe3\x84\x71\xc4\x9c\x44\x4e\x7f\x4e\x01\x67\x38\xc7\xc0\x99\xc0\x99\xc4\x79\x81\xb3\x98\xb3\x8e\xb3\x8d\xb3\x8f\x73\x9c\xd3\xcc\x69\xe1\xfc\xc9\x0d\xe0\x76\xe7\xf6\xe5\xaa\xb8\x3a\xee\x08\xae\x89\x5b\xcb\x9d\xce\x5d\xc0\x5d\xc3\xdd\xca\xdd\xcf\x3d\xc9\xbd\xc8\xbd\xc9\xe3\xf1\x22\x79\xf1\xbc\x74\x5e\x01\x6f\x24\x6f\x1c\xef\x49\xde\x0b\xbc\x57\x79\x9b\x79\x1f\xf1\x8e\xf2\x2e\xf0\x6e\xf0\xf9\xfc\x2e\xfc\xbe\xfc\x4c\x7e\x11\x5f\xcf\xa7\xf8\xd3\xf9\x8b\xf8\x6f\xf0\x3f\xe4\x1f\xe3\x5f\xe4\xdf\x16\xf8\x0b\x7a\x09\x64\x82\x3c\xc1\x28\x81\x4d\x30\x55\xb0\x40\xb0\x41\xf0\x81\xe0\x98\xe0\x92\xe0\xae\x30\x58\x18\x2b\x54\x09\x8b\x84\x46\x61\xbd\x70\xb6\x70\xb5\x70\x97\xf0\x73\xe1\x45\xe1\x5d\xbf\x10\xbf\x78\xbf\x4c\xbf\x32\xbf\x71\x7e\x53\xfc\x16\xfa\x6d\xf2\xdb\xef\xf7\xa5\xdf\x75\x7f\x7f\x7f\x89\xbf\xd2\x7f\x98\xbf\xd9\x7f\xb2\xff\x42\xff\x37\xfd\x3f\xf1\x6f\xf6\xff\x4d\x14\x2a\xea\x23\xd2\x88\x46\x8b\xdc\xa2\x97\x44\x6b\x45\x1f\x89\xce\x8a\xae\x07\x04\x04\xc4\x05\x64\x07\x8c\x0a\xa0\x02\x5e\x0a\x58\x1f\xb0\x37\xe0\xeb\x80\xdb\x81\x61\x81\x49\x81\xba\x40\x63\xe0\x33\x81\x4b\x02\xb7\x05\x1e\x0b\xbc\x1a\x24\x0c\x8a\x0d\xca\x09\x7a\x22\x68\x62\xd0\x82\xa0\xb7\x83\x3e\x0f\xfa\x31\x58\x18\x1c\x17\xac\x09\xd6\x07\x4f\x0a\x5e\x12\xbc\x33\xf8\x74\xf0\x8d\x90\xb0\x10\x69\x48\x51\x88\x35\xe4\x85\x90\x0d\x21\x07\x43\x2e\x87\xf2\x43\xe3\x42\xb5\xa1\xc6\xd0\x86\xd0\x55\xa1\x7b\x43\x2f\x84\x11\x61\xd1\x61\x9a\x30\x43\xd8\xb3\x61\xab\xc3\xf6\x87\x5d\x0c\xe7\x85\xc7\x87\xeb\xc2\xc7\x85\xcf\x0a\xff\x4f\xf8\xe1\xf0\x96\x88\xd0\x88\xb4\x88\xf2\x88\xba\x88\x25\x11\xef\x47\x34\x45\x12\x91\x71\x91\xba\x48\x4b\xe4\xec\xc8\x2d\x91\xa7\x22\xef\x74\xea\xd1\x29\xa7\x13\xd9\x69\x46\xa7\x4d\x9d\x8e\x75\xba\xd5\xb9\x5b\xe7\xec\xce\x64\xe7\x99\x9d\x37\x77\x3e\xd9\xf9\x4e\x17\x71\x17\x6d\x97\xf1\x5d\xe6\x74\xd9\xde\xe5\xab\xae\x9c\xae\x7d\xba\x0e\xeb\x5a\xdb\xf5\xb5\xae\xfb\xbb\xfe\xd8\x2d\xbc\x5b\xff\x6e\x86\x6e\x33\xbb\x6d\xe9\x76\xae\x3b\xde\xbd\x4f\xf7\x92\xee\x4f\x76\x5f\xd5\xfd\x50\xf7\x1b\x3d\x7a\xf6\xc8\xef\xe1\xe8\xb1\xa8\xc7\xde\x1e\x3f\xf6\x8c\xec\x99\xdd\x73\x5c\xcf\x79\x3d\x3f\xe8\x79\xa5\x57\x58\xaf\x81\xbd\xcc\xbd\xe6\xf5\xfa\xb0\xd7\xf7\xe2\x08\x71\x8e\xd8\x22\x5e\x28\xde\x27\x6e\x89\xea\x1e\x55\x10\xe5\x8e\x5a\x11\x75\x38\xea\xae\x24\x5e\x32\x5c\x32\x55\xb2\x59\xf2\x55\xb4\x5f\x74\x46\x74\x55\xf4\xbc\xe8\x3d\xd1\x2d\x31\xbd\x62\x0a\x63\x9e\x8a\xd9\x18\x73\x2e\x56\x18\x9b\x11\x5b\x1d\xfb\x4a\xec\x81\xd8\x5b\x71\xf1\x71\x15\x71\xcf\xc5\x6d\x8f\xbb\x1c\xdf\x39\x5e\x17\x3f\x31\x7e\x63\xfc\x97\x09\x01\x09\x59\x09\x13\x12\x56\x26\x9c\xe8\xcd\xeb\x9d\xd1\x7b\x7c\xef\x57\x7b\x1f\xe9\x83\xf7\x91\xf7\xa9\xee\xb3\xa4\xcf\xe7\x7d\xf1\xbe\x8a\xbe\xe6\xbe\xaf\xf6\x3d\xda\x8f\xdb\x4f\xd9\xcf\xd6\x6f\x65\xbf\xd3\x89\xa2\xc4\x9c\xc4\x9a\xc4\x8d\x89\xcd\x49\x91\x49\x43\x92\xa6\x26\x6d\x4f\xba\x9a\x1c\x93\x3c\x2a\x79\x4e\xf2\x81\xe4\x3f\x53\xe4\x29\x96\x94\xd5\x29\x5f\x48\x43\xa5\x83\xa4\x53\xa5\xbb\xa4\xbf\xc8\xfa\xc8\x0c\xb2\x25\xb2\x13\xa9\x01\xa9\x79\xa9\xcf\xa4\xee\x48\xbd\x96\xd6\x37\x8d\x4c\x7b\x2d\xed\x8c\x3c\x4c\x5e\x28\x7f\x4e\xbe\x47\xfe\x87\x22\x5d\xe1\x54\x6c\x52\x5c\x49\x8f\x49\x1f\x9b\xbe\x34\xfd\x74\x46\x78\x46\x71\xc6\x0b\x19\x9f\x28\xb9\x4a\xb5\xf2\x19\xe5\x7b\xca\xdf\x54\x0a\x15\xa5\xda\xa2\xfa\xb9\x7f\x62\xff\xf1\xfd\x37\xf4\xbf\x3c\x20\x7e\x00\x39\x60\xf5\x80\x0b\x99\x92\x4c\x7d\xe6\x8a\xcc\xa6\x81\xe2\x81\x63\x07\x2e\x1f\xd8\x94\x15\x95\xa5\xcf\x5a\x99\x75\x3e\x3b\x3a\xdb\x98\xbd\x26\xfb\x52\x4e\xef\x9c\x71\x39\x6f\xe4\x5c\x55\xa7\xa8\x9d\xea\xad\xea\x5b\x1a\x95\xe6\x69\xcd\x47\xb9\x44\x6e\x7e\xee\xcc\xdc\xc3\xda\x50\xed\x70\xed\x62\xed\xd7\x79\x92\x3c\x53\xde\xc6\xbc\x96\x7c\x79\xfe\x93\xf9\x1f\x15\x70\x0b\x06\x17\xcc\x29\x38\xad\xeb\xa1\x33\xe8\xd6\xeb\x5a\x06\xa5\x0f\x7a\x7a\xd0\xbe\xc1\xa2\xc1\xa5\x83\x17\x0f\x3e\x3f\xa4\xcf\x10\xe7\x90\x5d\x85\x78\xe1\xa0\xc2\xb9\x85\x5f\x0e\x8d\x1d\x6a\x1b\xba\xbd\x08\x8a\x74\x45\x73\x8b\xbe\x2a\x8e\x2f\x9e\x50\xfc\xee\x30\xde\xb0\xe2\x61\x4b\x86\x7d\x57\x22\x2d\x79\xaa\xe4\x40\x69\x58\xe9\x98\xd2\x0d\xa5\x37\xcb\xd4\x65\xb3\xcb\xbe\x18\x9e\x30\xdc\x3d\x7c\x4f\x79\x50\xf9\xe8\xf2\xf5\xe5\xb7\x2a\x72\x2b\x1a\x2b\x9a\x46\x24\x8f\x78\x7a\xc4\x67\x23\xbb\x8e\x34\x8f\xdc\x31\x8a\x3f\xaa\x7c\xd4\x9a\x51\x37\x1e\xd3\x3e\x36\xff\xb1\x8b\xa3\xe5\xa3\xa7\x8f\x3e\xf5\x78\xfc\xe3\x75\x8f\x1f\x7c\xa2\xeb\x13\x96\x27\xde\x1f\x13\x34\x46\x3f\xe6\xed\xb1\xdc\xb1\x15\x63\x37\x8c\xfd\x5d\x5f\xa4\x5f\xa9\xbf\x51\xa9\xab\x5c\x5a\xd9\x62\xd0\x18\x5e\x31\xfc\x60\xcc\x36\xce\x33\x5e\x21\x33\xc9\x46\xf2\x52\x55\x66\x55\x63\xd5\x65\x53\xa6\x69\xae\xe9\x4a\x75\x56\xf5\x82\xea\x1f\xcd\x1a\xf3\x62\xf3\xb5\x71\x05\xe3\x96\x8d\xbb\x35\xbe\x68\xfc\xda\xf1\xad\x96\x0a\xcb\x66\xab\xc0\x3a\xd6\xba\xd3\x16\x6a\x1b\x6f\xdb\x67\xef\x69\xaf\xb3\x1f\x75\xf4\x75\x4c\x77\x34\x4d\x50\x4d\x98\x3f\xa1\xc5\x39\xd8\xb9\xc6\x85\xb9\x1e\x77\xed\xa0\xc2\x29\x07\x75\xc8\x9d\xe0\x9e\xe6\x6e\xae\x19\x58\xb3\xa4\xe6\x76\x6d\x79\xed\xdb\x75\x21\x75\xb6\xba\x43\xf5\x7d\xea\x67\xd4\x5f\x9a\x98\x37\xf1\xf5\x27\x39\x4f\x1a\x9e\xdc\xf3\x54\xd4\x53\x53\x9e\x6a\x7e\x3a\xe7\xe9\x15\x93\xb0\x49\x95\x93\xf6\x3c\x13\xfd\x4c\xc3\x33\x17\x27\xe7\x4f\x5e\x37\xc5\x6f\xca\xf8\x29\xff\x9d\x9a\x32\xb5\x71\xea\xaf\xcf\x56\x3c\xbb\xab\xa1\x47\xc3\xe4\x86\x0b\xd3\xf2\xa7\x6d\x9c\x1e\x38\xdd\x39\xfd\xf4\x73\xfd\x9f\x5b\xf6\x3c\xe7\x79\xf3\xf3\x87\x67\xa4\xce\x58\x34\xe3\xcf\x99\xc6\x99\x9f\xce\x4a\x99\xb5\x60\xd6\xef\x2f\x18\x5e\xf8\xf4\x45\xe9\x8b\x0b\x5f\x6c\x7d\xa9\xea\xa5\xc3\xb3\x15\xb3\x5f\x7b\x99\xf7\xb2\xed\xe5\x53\x73\xb2\xe6\xac\x6b\x0c\x69\x9c\xd8\x78\x61\x6e\xe1\xdc\x6d\xf3\xc4\xf3\x66\xce\xfb\x75\xfe\x98\xf9\x07\x17\xa4\x2d\x58\xf6\x8a\xdf\x2b\xee\x57\x9a\x16\x0e\x59\xb8\x63\x51\xcc\xa2\x97\x17\xfd\xbe\xb8\x7a\xf1\xc9\x25\xea\x25\x9b\x97\x76\x5f\x3a\x63\xe9\xad\x57\x8d\xaf\x1e\x7b\x2d\xfb\xb5\x4d\xcb\x7a\x2c\x9b\xb5\xec\xce\x72\xf3\xf2\x33\x2b\xf2\x57\x6c\x5b\x19\xb7\x72\xc1\x2a\xde\xaa\x9a\x55\xdf\xad\x2e\x5f\x7d\xe0\xf5\x8c\xd7\xd7\xaf\xe9\xba\x66\xd6\x9a\x3f\xd6\xda\xd6\x36\xad\x2b\x59\xb7\x6f\x7d\xfa\xfa\xf5\x1b\xba\x6f\x98\xbd\x11\xdf\xe8\xde\x78\xe5\x8d\xd1\x6f\x1c\xf9\x4f\xee\x7f\x76\x6c\x4a\xdc\xb4\x62\x73\xe4\xe6\x59\x6f\xc2\x9b\xee\x37\xbf\x7f\x6b\xec\x5b\xa7\xb6\x0c\xde\xb2\xe7\xed\x8c\xb7\x37\xbd\x13\xfb\xce\xd2\xad\x61\x5b\x67\x6e\xc3\xb6\xd5\x6f\x6b\xd9\x5e\xbd\xbd\x69\xc7\xc8\x1d\x47\x77\x0e\xda\xb9\x67\x57\xff\x5d\x5b\xdf\x4d\x7a\x77\xed\x7b\x51\xef\x2d\x79\x3f\xe2\xfd\xd9\x1f\xf8\x7d\xd0\xf0\x41\xeb\x87\x13\x3f\xbc\xf1\x91\xe3\xa3\x1f\x77\x9b\x76\x5f\xd8\x33\x66\xcf\x17\x7b\x47\xec\x3d\xb1\x6f\xd8\xbe\xc3\xfb\x07\xef\xff\xe4\xe3\xbc\x8f\xf7\x1e\xc8\x39\xf0\xe1\x27\x99\x9f\xbc\x77\x50\x75\x70\xe7\xa7\x19\x9f\x6e\xff\x4c\xf1\xd9\xb6\x43\xf2\x43\x5b\xff\x2b\xff\xef\xd6\xc3\x8a\xc3\xdb\x3e\x4f\xff\x7c\xc7\x11\xe5\x91\x5d\x47\x07\x1c\xfd\xe0\x58\xd6\xb1\xdd\xc7\x73\x8f\x7f\x7c\x42\x77\xe2\xb3\x93\x43\x4f\x1e\x3d\x35\xfc\xd4\x99\xd3\xa3\x4f\x37\x9d\x31\x9e\xb9\x7c\xd6\x72\xf6\xda\xb9\x9a\x73\x77\xbf\x98\xfc\x25\xf7\xcb\x99\x5f\x05\x7f\xb5\xe0\xeb\xee\x5f\xaf\xfc\xa6\xf7\x37\x9b\x9b\x14\x4d\xef\x37\xe7\x36\x1f\x3a\x5f\x7a\xfe\x8b\x0b\x86\x0b\x3f\x7c\xeb\xfa\xf6\xf7\x8b\x0d\xdf\x05\x7c\xb7\xe0\x52\xaf\x4b\xeb\x2f\xcb\x2e\xbf\x77\x25\xef\xca\x91\xef\x1f\xfb\xfe\xe2\x0f\x8e\x1f\xee\xfe\x38\xfd\xa7\x90\x9f\x96\x5e\x4d\xb8\xfa\xce\xcf\xd9\x3f\x1f\x6a\x19\xd1\x72\xf1\x9a\xf3\x5a\xeb\x2f\x2f\x5c\xef\x72\x7d\xed\xaf\x69\xbf\xee\xb9\x51\x7c\xe3\xeb\x9b\xd6\x9b\x77\x6f\xcd\xbc\xdd\xe5\xf6\xba\xdf\x32\x7e\x3b\x70\xa7\xe2\xce\xa5\xbb\xb5\xbf\xf3\x7f\x5f\xf8\x47\xef\x3f\x76\xfd\x39\xf8\xcf\x2f\x5b\xad\xad\xad\xad\x3f\x81\x88\x59\x29\x8d\xd1\x14\x02\xd6\x7a\x15\x02\x99\x2b\x30\x4e\x66\x56\x1e\x5f\x40\x03\x88\x04\x02\x81\x50\x20\x12\x0a\x45\x21\xfe\x7e\xfe\x21\x11\x41\x22\x51\x50\x44\xe7\xb0\xb0\x88\xb0\xb0\xce\x21\x22\x26\xb5\x9d\x1e\x9e\xb0\x00\x7f\xff\x80\xc0\x80\xe0\xc0\xc0\xe0\xf0\xc0\xc0\xc0\x70\xfa\x10\x18\xee\xa9\x12\xf2\x28\x0d\xb4\x7e\x04\x21\x02\x58\x0e\x75\x04\x26\x01\x3c\x04\x23\x42\xb0\xd6\xaf\x80\x03\x82\xd6\x7d\x58\x16\x00\xc6\xc5\x98\xd4\xa6\x77\x08\xc0\x70\x0e\x97\xc7\x17\x08\xfd\xfc\xb1\xfb\x0b\x31\xc0\x09\x6f\x61\x30\x60\x1c\x8c\xc0\x39\x38\x97\xcf\x13\x70\x09\x51\x2a\x06\x78\x08\xc1\x89\x0a\x95\x72\x73\x86\xe9\xc3\x24\x13\xa6\xc8\x78\xe1\x73\x56\xbc\xa5\x8e\x8e\x89\x28\xd9\x5d\x99\x9a\xe6\x9c\x7a\x54\xc3\x8f\x6d\x2c\x6d\x69\xbe\x66\x70\xc9\x23\x57\x6e\x79\x36\x2e\x77\x6e\x99\x51\xbb\x67\x15\xa5\xe8\x74\x6c\xf8\x79\xf2\x97\xb7\x1b\xf6\x1e\x77\x5f\xb8\x9e\x17\x3f\x6f\xf5\xb4\x77\xe6\xef\x3b\xf1\xed\xaf\xaf\x6f\xdd\x7f\xf2\xe2\x8d\xf2\xaa\x9a\xe9\x0b\xd6\x6c\xfb\xf8\xd4\x77\x37\xd3\xf3\x2b\x4c\xb5\xcf\xbd\xb2\x76\xfb\x81\xd3\x97\x6e\x85\x00\x8e\x63\x38\x87\xc3\xf4\x89\xcf\xe3\xca\x99\x2e\x44\x49\x43\x39\x39\xc3\xf4\x13\x24\x61\x5c\xd9\x94\x39\xe1\x74\x0f\x76\x97\x1c\x6d\x49\x8d\xa9\x6c\x76\x4e\x6d\xd4\x94\x46\x18\x5c\x69\xd7\x62\x79\x74\x07\xf8\x71\xf2\x3d\xc7\x72\xe7\x96\xad\xea\x64\xd4\x0e\x57\x50\xe4\x79\x5f\x17\xfe\xba\x07\xf1\xed\x5d\x68\x3d\x07\x22\x82\xb9\x67\x08\x64\xc1\x8d\xb2\x46\x5d\x6c\xef\x98\x46\xdd\x20\x5d\x4c\x63\x49\xa3\x2e\x66\xde\xea\xfb\x0d\xad\xd0\x7a\xe4\xd1\xdc\x8e\x3e\x9a\xdb\xb1\x47\x73\x3b\xfe\x68\x6e\x27\x1e\xcd\xed\xe4\xa3\xb9\x9d\x7a\x34\xb7\xd3\xac\x72\x3b\xdb\xfa\x53\x17\xbf\xf6\x5d\x8b\xd4\xa4\x14\xc8\x50\xeb\x0a\x39\x8c\x54\x87\x5e\xdd\xb1\x51\x40\x74\x8b\xcd\x7f\xe0\x8c\x03\xb3\x41\xc2\xf8\xc6\x32\xbe\xc1\xc7\x0f\x2e\x1b\x9c\xf9\xe2\xf7\x09\xd3\x0a\xe4\xe3\x1a\x22\x96\xf6\x65\xca\x54\x4c\xd9\x69\xba\xdc\xb7\x5e\xf0\x77\x38\xcd\x36\xaa\xc8\x4d\x39\xdc\x14\xb3\x20\x00\x80\x62\x17\x55\x5a\x69\xb7\x5b\x18\x0f\x9d\x8d\x22\x49\x9b\xdb\xea\xcd\x33\x67\x2b\xb3\xa2\x08\x62\xea\x96\x9a\xeb\x68\x0f\xb5\x99\xa2\xeb\xb4\xb7\x49\x3a\x87\xea\xad\x64\x99\x76\x44\x99\xef\x66\x9e\x0a\xc5\x4e\xbb\xbd\xaa\x94\xa4\xdc\x8e\xa2\xca\x71\xf4\xea\x8b\x5b\x1d\x55\x9d\x3e\xeb\x83\x67\x6c\x8c\x93\x9f\xc3\x57\xee\xad\xa8\xb6\x50\xb6\xb6\x3e\x88\x2a\xdd\x66\x0b\x65\xb6\x31\x8d\x00\x80\x90\xf1\xd6\x14\x8e\x1c\xec\x19\x7f\x7f\x66\xdd\x93\x78\xcf\x18\x43\x3b\x8c\xb1\xc8\x41\x2f\xcc\xe8\x35\x53\x27\x66\x4d\xe4\xa0\x6c\xde\x6e\x83\xc6\x52\xe9\xf4\x5d\x94\x98\x5c\x85\xed\x25\x4e\x9b\xa6\xfd\xc2\x46\xb5\x5f\x0c\xa9\xb4\xb8\x7c\x17\x43\x4d\x54\x8d\xef\x42\x6b\xb5\xe4\xfa\x2e\x74\x36\xaa\xbd\x69\xb5\x61\xbc\xa9\x6d\xe8\x6d\x1f\xa7\x92\x7c\xb5\xa6\x6d\x0b\x0d\x4a\x8c\x62\xb1\xd1\xee\xae\xcc\xb6\x37\xf9\x16\x72\xf9\x4e\xdb\x03\x36\xb5\xe5\x41\x3f\xb5\xd3\x58\x36\xdc\x46\xe5\x45\x97\x58\xa8\x8e\x0b\x41\xb5\xc5\x28\x7e\x98\xbd\xc4\x65\xa1\x18\x7b\x71\x9d\x25\xbb\xc4\x67\xf6\xab\x21\x0d\x94\xdd\x99\xab\xa7\xf4\xbe\x79\x50\x6c\x2a\x76\x79\xe7\x01\x9d\x6f\x3b\x6b\x18\x08\x64\x15\xf5\xb0\xe6\xcb\xec\x8e\x87\xde\xb6\xd4\x60\xf1\xd8\x8b\x9d\x86\xec\x91\x3e\x73\xb0\xc1\x69\x77\x54\x54\x93\xb6\x62\xfa\x79\x99\x6d\x26\x2f\xb1\x40\xba\xa0\x84\x34\x50\x6a\x3b\x45\xd9\xad\x16\xbb\xcd\xd4\x56\x45\xe4\x2d\xa1\xbb\xd0\xc1\x1e\xe0\xb5\x97\x98\x4d\xd5\x1d\x0b\xfc\xbd\x05\x65\x76\x87\xcf\x4c\xcf\x1c\xe2\x27\x4f\x1f\xda\xf6\xdf\x70\xef\x99\x99\x55\x71\x4c\x59\x60\xfb\x08\xb2\x26\xb7\xd5\xfa\xc5\x03\x0c\xa0\x95\x49\x6d\x6f\x61\x00\x63\xa5\xdf\xdb\x3a\xe6\xba\x8b\xef\xba\x27\x53\xeb\x3a\x73\x2d\xf4\xb6\x86\x31\xb5\xe2\x83\xdb\xda\xf2\xfe\xc5\x62\xee\x4d\xdc\x60\xf2\x05\x90\x5c\x55\x05\x18\x58\xaa\xaa\x80\xd7\x56\xc9\x63\x59\xb1\x68\xb1\xcf\x22\x63\x8e\xa3\x00\x7c\x16\x39\x73\x4c\x6c\xb7\x30\x6d\xde\x66\xf2\x0e\x6f\xaf\xef\x4f\xc4\x65\xba\x98\xfd\x32\x86\x85\xa0\x8d\xb3\x67\x47\x35\xbb\x6d\xf7\xcf\x53\xd6\xd3\xc7\xc9\x73\xdd\x95\xce\x11\x59\xbe\xde\x33\x89\x50\x00\xe0\x66\xe6\x63\x65\x00\x3b\xd4\x00\x09\xce\x87\xef\x7f\x74\xb4\xd1\x35\x7c\x7b\xb6\x0f\x73\x68\x9f\x86\xed\x76\x9b\xdb\x42\x4f\x40\xfa\xeb\xca\xab\xb4\xbb\x6d\x46\xd7\x7d\xef\xad\x81\x92\x7a\x3b\x4c\x4f\xf6\x0e\x13\x0d\xee\x9b\x91\xa0\xf6\xcd\x5c\x4f\x37\x4a\x7c\x13\x93\x19\x0c\xcf\x65\x31\x1b\x48\x57\xb9\x65\x08\xfd\x6a\x61\xf7\xdc\x87\xcb\x94\xd1\x5f\x32\x00\xe0\x33\x17\xba\xdc\x0e\x6d\xf3\x4d\x4e\xbb\xdb\x71\x8f\x89\x67\x77\x9a\x4d\x66\xdf\x57\x53\x5b\x4a\x57\x2a\x62\x6c\xf4\xeb\xa1\x77\x53\xf6\x7c\xd2\x46\x3a\xf5\x14\x69\x64\x7a\x5f\xef\xf0\x7e\xe6\xfd\x3c\xce\xb4\x05\xda\x3f\xf6\xff\xbf\xc7\x4f\xb8\x9d\x96\x7b\xfe\x58\x30\xf0\xef\xb5\x14\xba\x4c\xf7\xfe\x41\xe1\xe9\x2d\x54\x99\xde\x74\x8f\x2d\xd0\x40\x5a\x2c\x65\x64\x1d\xa5\x73\x15\x94\x15\x0e\xf1\x7e\xc0\x04\x5e\xf3\x3d\xce\xc2\x6a\xbb\x73\x62\x8e\xc5\x6c\xf2\x92\x0a\xf2\x0c\xbe\xc0\x6b\xa6\xe9\x1a\x3d\x3b\x8b\xb4\x7b\x0d\xe9\xa4\x1e\xe2\x5e\xee\x35\xdf\xeb\xee\x5f\x69\xd2\xd8\x2d\x76\x67\x07\xb8\x21\x9e\x0a\xea\x7c\x5f\x01\xdd\x8d\xa1\x76\x1b\x7d\x16\x52\x76\x47\x91\x9b\x72\x91\x1d\xc1\xf9\x59\xc8\x2a\xea\x01\xab\xa8\x92\xf9\x14\x3e\x60\xf7\x67\x76\xb0\xef\x33\x33\xef\x52\x82\xa7\x1e\x3d\x9d\xb3\x5a\xa0\xdd\x1e\xce\x64\xe9\x47\x48\x30\xd7\x22\xe6\x1d\xf0\x6b\x43\x54\x07\x00\xcb\x01\xb0\x6a\x80\x66\x60\xa2\x14\x9d\x51\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\x02\x45\x25\x50\x54\xe2\x7f\x5e\x54\x82\xd9\x15\x88\x62\x66\xeb\x70\xe6\xf7\x9f\x00\x10\x04\x39\x60\x04\x3b\x54\x02\x09\x62\x28\x86\x6a\xb0\x03\x05\x76\x70\x31\x39\x07\xbd\x64\xf8\x07\x0f\x31\x68\xa0\x14\x14\xbe\xdd\x4f\x8e\x67\x87\x8f\x0f\x02\xcf\x3d\x5a\x9b\x03\xbf\x6c\x5b\xce\xd9\x5c\x49\x7a\xfa\x1b\x90\x64\xb0\x5b\x93\xeb\xf4\x8e\x64\x69\x52\x4a\x32\x0c\xc8\xaa\x73\xe8\x0d\xe3\x49\x4a\x5c\x49\x9a\xcc\xb6\x4c\xc9\xcf\xef\x7e\x28\x11\x9b\x8d\x99\x92\x0a\x79\x61\x4a\xa1\x43\x43\x56\x9b\x0b\x26\x3a\xc9\xd2\x89\x43\xcb\x0c\x13\xc7\x1b\x94\x46\x49\xd6\x40\xf1\x80\x3a\x55\x9d\xd5\x61\x25\x29\xbd\xb8\xce\x6a\xb1\xb9\x54\x75\x99\x12\xa6\x71\x95\xcd\xa5\xa2\xcd\xc9\x12\x31\xe3\x42\x8d\xcf\x94\x78\x7e\x47\x3a\xa2\xb0\x58\xac\xb1\x3b\x49\xb1\x3c\x29\x35\xd1\x90\x22\x95\x8a\x15\x8a\x24\x69\x9a\x5c\xa1\x90\xf6\x13\xcb\x52\xa4\xb2\xe4\x14\x59\x72\x8a\x22\x51\x9a\xa6\x92\x2b\x54\xb2\x74\x71\x5b\x92\x0c\x14\x0f\x70\x1a\xab\x54\x25\xb9\x79\x6d\xf7\x72\x1a\xab\x32\x25\x1d\xd6\xa8\xb5\xa9\x49\x76\xa7\x29\x59\xaa\x54\x2a\xe9\x36\x64\xb2\x44\xa7\xb1\x2a\xd1\x55\x6f\xa3\xf4\x75\x89\x36\x57\xb4\xb7\x85\x5c\xd2\x65\x70\x9a\x99\xc8\x85\x98\xbe\xd6\x57\xda\xdd\x54\xa6\x44\xe2\x1d\x82\xd5\xe1\x6b\xf6\xa1\xac\xbc\x8e\x46\x83\xcf\xcf\xe1\x76\x5a\x98\x9b\x1b\x0d\xc9\xa4\x85\xb4\x92\x36\xca\x95\x2c\x4d\x92\x26\x77\x68\xb4\xb0\xf0\xef\x9b\xb5\x5a\x7d\xde\x2e\x4a\x5b\x43\xfd\xbd\xb7\xab\xac\xde\x41\x26\x97\x90\x2e\xbb\xdb\x69\x20\xb5\x35\xa4\x8d\x8a\xf6\x56\x77\x78\x83\x5e\x0f\x6f\xc2\x57\xec\x1b\x8d\x43\xa5\x71\x92\x7a\xca\xee\x2c\xb3\xdb\x2d\xde\x07\xf5\x17\x3f\xf8\xed\xe0\x4f\xe6\xea\x29\x32\x53\x22\x4b\x91\x2a\x13\xa5\xb2\x44\x99\xac\x4c\x2a\x57\xc9\xe4\x2a\xa9\xb4\x6f\x4a\x86\x2a\x25\xc5\xe3\x5a\x48\x52\x7a\xa3\x9e\xd2\xdf\xe7\x2c\x2f\xf3\xfe\x5c\xf8\x1e\x67\xbb\xd1\x5c\x55\xff\x8f\xae\x46\x83\xaa\xca\xee\xb4\xea\xa9\x4c\x89\xd9\xaa\x37\x91\xc9\xe3\x1c\xa4\x89\x69\xa1\xb0\x50\xa5\xb3\xb9\x28\xbd\xcd\x40\xea\x72\x33\x25\x75\x56\x47\x92\xd9\x6c\x54\x49\x65\xda\x94\x54\xa9\x2c\x4d\x9a\x22\x4b\xd7\xe6\x48\xa5\x4a\x65\x5a\xae\x36\x5d\xa9\xce\xcd\xc9\x93\x6a\xe5\x69\x5a\x6f\xdd\x5c\xbb\xc1\x4d\x3f\x3d\x6f\x5d\xa3\xd9\xa8\xd2\x64\xc8\x35\x79\x5a\xad\x3a\x43\x2d\x4b\xa3\xeb\xaa\x95\x79\x5a\x6d\x8a\x3c\x5d\xa3\x4c\x4b\x55\x28\x15\xe9\xde\xba\x9e\xfd\x60\xbd\xe5\xa1\x6d\xe4\xfc\x53\x1b\xbe\xa7\xa2\x1a\x42\x9a\xf4\x86\x7a\x5d\x71\x99\x26\xd7\x6c\x22\x5d\x54\xa6\x44\x93\x2e\xcf\x95\xa6\x6b\xe5\xe9\x69\x6a\xb9\x42\x9b\x27\xcf\x55\xab\xb5\xa9\x4a\x65\x9a\x26\x45\xab\x4c\x57\xca\x35\x1d\x6b\x33\x3b\xa1\x85\x76\x23\x99\x29\x49\xed\x68\xd7\x69\x34\xc5\x4e\x7b\x95\xd9\x42\x66\x4a\x1e\xd8\xb0\xa2\x5f\x0d\xcf\x20\x0a\xcc\x2e\xca\xee\xac\x6f\x7b\x55\x4a\xc9\x09\x6d\x39\x8b\x59\xcc\xcc\x4a\x95\xde\x40\xbf\x38\x99\x12\x03\x33\x03\x8c\x92\x36\xb3\xf9\x21\xd0\xff\x79\xd0\x9e\xba\xb5\xd5\xa4\xed\x6f\xa7\x91\xc7\xcd\x65\xaf\xa2\x6a\xf5\x4e\x32\xc7\x44\xda\xa8\x7f\x9a\xa5\xc9\x7f\xd5\x6f\x97\xbe\xe6\xef\x7b\xad\xcc\xc8\xc8\xc8\x48\x4b\xd3\x2a\xd3\x3d\xbd\x56\xe6\xa8\xe5\xea\x14\x65\x4e\x46\x86\x3a\x35\x2f\x2d\x23\xe7\xaf\x7b\xad\x50\xa5\x75\x9c\xa4\xff\xa2\xd7\x6d\x75\x0c\xd5\x7a\x9b\x89\x34\x66\x4a\x92\xff\x1f\xc6\xf1\xcf\x53\xfe\xa1\xe3\x78\xf0\x65\x63\x6d\x1c\xc9\xed\x53\x2a\xf9\xfe\xd9\x96\x7c\xdf\x97\xd9\x6b\x2a\xc9\xcd\x63\xdc\xbd\x7f\x67\x06\x8a\x51\x42\x09\x25\x94\x50\x42\x09\xa5\xff\x7d\xa9\x7d\xa5\x4a\xda\x8c\x99\x92\x5a\x49\xd6\x40\x14\x3f\x47\xf1\x73\x14\x3f\x47\xf1\x73\x14\x3f\x47\xf1\x73\x14\x3f\x47\xf1\x73\x14\x3f\x47\xf1\x73\x14\x3f\x47\xf1\x73\x16\xe2\xe7\xed\x11\xf3\x6c\x5f\xc4\x1c\x7b\xf4\x84\xb7\x27\xc2\x97\xee\x29\xc7\x3a\x96\x3c\x62\x62\x22\xe6\x84\x02\x37\x13\x58\x48\xc7\x88\xf9\xd0\xd6\x7d\xd8\x4a\x00\xe0\xe1\x44\x07\xa5\xc3\x17\xf0\xb8\x1c\x21\xe1\x87\x63\xe0\x8f\x01\xf0\x88\xf6\x78\x39\x00\x8f\xcb\x21\xf8\xb8\x00\x13\x82\x9f\x7f\x30\xe0\x18\xc1\xc1\x08\x82\xee\x11\xce\x13\xba\x31\x9c\xe0\x84\x70\x43\x79\x51\xfc\x30\x09\x08\xa4\xe1\x39\xb2\xe8\x08\xe1\x30\x75\xa4\x3e\x26\xb5\x53\xc9\x84\x29\x9d\x2b\xe7\xc4\x6a\x56\xbc\xd5\x12\x97\xe6\xf4\xeb\xb2\xfb\xa8\x3c\xbe\xb9\x54\x31\xf5\x5a\xe3\xca\xdc\x32\x97\x36\x2f\x3d\xdf\x90\x30\xbc\xbc\xa2\xeb\x96\x3d\xc7\xce\xff\x62\x7c\x96\x9a\xdb\x40\xae\x7a\x7b\xef\xf1\x0b\xbd\x33\xaa\xae\xbb\xfb\x28\x55\x05\xba\x41\x23\x46\x8e\x32\x55\x9b\xc7\xd5\xd4\xd6\xd5\x4f\x9c\x36\xfd\xb9\xe7\x67\xcc\x9c\x37\x7f\xc1\x2b\x0b\x17\x2d\x5e\xfd\xfa\x9a\xb5\xeb\xd6\x6f\x78\x67\xeb\xb6\xed\x3b\x76\xee\xda\xb7\xff\xe3\x03\x9f\x1c\xfc\xf4\xc4\xc9\x53\xa7\xcf\x9c\x3d\xf7\xed\xc5\xef\x2e\x5d\xbe\xf2\xfd\xaf\x37\x6e\xde\xba\xfd\xdb\x9d\x10\xba\xcb\x38\x87\x43\x70\x39\x1c\x0e\x8f\xc7\xb5\x62\x38\x11\xc2\x89\x0a\xe5\x4a\x79\x20\x09\xcb\x19\xc6\x97\xe9\xc3\x27\x08\xd4\x53\xa2\xe7\x44\x94\xac\xa8\x8c\x4c\x15\xbe\x15\xb3\xfb\xa8\xc6\xd9\xd2\xa9\x79\x6a\x5a\x6c\x63\x69\x67\x43\xee\xb5\x95\x5b\xe2\xe4\x5d\xca\x14\x5a\x63\xbc\x9f\xeb\xd9\xb9\x79\x14\xdd\xdf\xe1\xa4\xbb\x3c\xbd\x61\x1a\xd3\xe1\xeb\xbd\xbb\xce\x5b\xfd\xce\xbe\x13\xdf\xfe\x3a\xdf\x13\x6b\x4f\xc8\xaf\xa8\xca\xf0\x85\xdb\xdb\xa3\xfd\x05\x23\xaa\xeb\x9e\x5f\xb8\x6e\xc7\x27\x67\x2e\xdf\x56\xea\x46\x9a\xeb\x67\x2c\x5a\xbf\xf3\xe0\xd9\x2b\xbf\xf5\x51\x0d\x1a\x35\x6e\xe2\xcc\xc5\x1b\x76\x7d\x7a\xee\xfb\x3b\xf7\x06\xe5\xbf\xb9\xf0\xcd\xae\x5b\x4f\xdc\xba\xfa\xfe\xe9\xf7\xef\x6e\x76\xff\x3c\xe9\x87\xaf\x9e\x44\x86\x7f\x6b\x68\x3d\x82\x70\xb2\x89\xf3\x28\xc2\xc9\x26\xce\x63\x08\x27\x9b\x38\x8f\x23\x9c\x6c\xe2\x3c\x81\x70\xb2\x89\xf3\x24\xc2\xc9\x26\xce\x53\x08\x27\x9b\x38\x4f\x23\x9c\x6c\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\x91\xee\x64\x15\x27\xd2\x9d\xac\xe2\x44\xba\x93\x55\x9c\x48\x77\xb2\x8a\x13\xe9\x4e\x56\x71\x22\xdd\xc9\x2a\x4e\xa4\x3b\x59\xc5\x89\x74\x27\xab\x38\xcf\xfe\x9f\x00\x00\x00\xff\xff\x29\x86\x58\x73\xe6\xce\x00\x00")

func tplsCoverJpgBytes() ([]byte, error) {
	return bindataRead(
		_tplsCoverJpg,
		"tpls/cover.jpg",
	)
}

func tplsCoverJpg() (*asset, error) {
	bytes, err := tplsCoverJpgBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/cover.jpg", size: 52966, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsEpub_coverCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xcb\x0a\x42\x21\x18\x04\xe0\xbd\x4f\x31\x10\x2d\x05\xdb\x7a\xf6\xbd\x87\xb7\x54\x52\xff\x83\xfc\x91\x11\xe7\xdd\xa3\x53\x74\xa1\x66\xf9\x0d\x0c\x63\xc9\x5f\x70\x15\x00\x60\x8d\x3b\xc6\x4e\xa7\xe6\xa5\xa3\x42\x5d\x63\xb3\x5f\x33\xad\x75\x35\x3d\xe6\x26\x2d\x31\x53\xd5\x50\xf3\xf8\xf2\x12\x0e\xfc\xab\x3d\xc7\xf4\x87\x99\xe6\x0f\xe4\x30\x58\x9a\x92\x63\xd3\x70\xa1\x71\xe8\x77\x5f\x04\x20\x80\x5c\xe3\xf3\x5f\x35\x43\xa6\xf0\x18\xdc\x29\xb5\x9d\x5e\x7a\xce\x9e\xd3\x1b\x97\x5b\x00\x00\x00\xff\xff\x05\x21\xd2\xf8\xd5\x00\x00\x00")

func tplsEpub_coverCssBytes() ([]byte, error) {
	return bindataRead(
		_tplsEpub_coverCss,
		"tpls/epub_cover.css",
	)
}

func tplsEpub_coverCss() (*asset, error) {
	bytes, err := tplsEpub_coverCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/epub_cover.css", size: 213, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_book_tocHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x8e\xd3\x4a\x10\x87\xf7\x7d\x8a\x7a\xb5\x7d\x8a\x7b\x3c\x23\x24\x32\x74\x7b\x24\x9c\x48\x20\x0d\x49\x84\x8c\x80\x95\xd5\xb1\x2b\xb1\x45\xbb\x6d\xdc\x15\xc7\xe6\x1e\xac\xb8\x03\x37\xe0\x38\x88\x6b\xa0\x4e\x3c\x88\x05\x2b\xbb\xfe\x7c\x9f\xea\xd7\xea\x61\x6c\x2c\x0c\xd4\xfb\xba\x75\x1a\xe3\xe8\x06\x81\x5c\xd1\x96\xb5\x3b\x6a\x3c\xf1\x61\xf1\x1c\xe1\x21\x11\xea\xbf\xd5\x36\xcd\x3e\xee\xd6\x50\x71\x63\x61\xf7\xee\xe5\xe3\xeb\x14\x70\x21\xe5\xfb\xbb\x54\xca\x55\xb6\x82\x0f\xaf\xb2\x37\x8f\x10\x47\xb1\x94\xeb\x0d\x02\x56\xcc\xdd\xbd\x94\xe7\xf3\x39\x3a\xdf\x45\x6d\x7f\x94\xd9\x5b\x39\x06\x3c\x8e\x03\xf0\xf4\x1f\x95\x5c\x62\x22\xd4\x45\x3c\x36\xd6\x79\xfd\x0f\x36\x5e\x2e\x97\x57\x02\xc3\xd2\xbd\x35\xe1\xc0\x2f\xd5\x22\xdd\x5c\x60\x32\x65\x22\x54\x43\x6c\x20\xc0\x0b\xfa\x7c\xaa\x07\x8d\x69\xeb\x98\x1c\x2f\xb2\xa9\x23\x84\xe2\x5a\x69\x34\x5d\x67\xeb\xc2\x70\xdd\xba\xab\xf4\xff\xb1\xb1\x2f\xa0\xa8\x4c\xef\x89\xf5\x9c\x5b\x3e\x19\x9d\x69\x48\xe3\x91\x1c\xf5\x86\xdb\xfe\x2f\xd1\xda\xf8\x69\x77\xda\xc3\x10\x47\xcf\x6e\xae\x04\xd7\x6c\x29\x11\x99\xd9\x5b\x82\xed\x01\xe6\x13\xbc\x50\x72\x1e\x29\x5b\xbb\x4f\xd0\x93\xd5\xe8\x79\xb2\xe4\x2b\x22\x46\xa8\x7a\x3a\xcc\x9d\xa8\xf0\x1e\x81\xa7\x8e\x34\x32\x8d\x2c\x43\x1d\xe4\x72\x0e\xba\x6f\xcb\x29\xc4\xbe\x85\xc2\x1a\xef\x35\x5e\xd4\xdc\x16\x98\x88\x5f\xdf\xbe\xff\xfc\xf1\x35\xec\xde\x26\x42\x95\xf5\xf0\x67\xe7\x32\x56\xa5\x4d\x44\x9e\xe7\xe9\x76\x93\xad\x37\x59\x9e\xe7\x42\xc9\xd0\x53\xb2\xac\x87\xf0\x99\xe5\x32\x3c\x4c\x22\x7e\x07\x00\x00\xff\xff\xae\x20\x67\x2c\x23\x02\x00\x00")

func tplsTpl_book_tocHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_book_tocHtml,
		"tpls/tpl_book_toc.html",
	)
}

func tplsTpl_book_tocHtml() (*asset, error) {
	bytes, err := tplsTpl_book_tocHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_book_toc.html", size: 547, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_chapterHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x6e\xdb\x3c\x10\x84\xef\x7a\x8a\xfd\xf7\xfa\xc3\x62\xe4\xa0\x40\x9d\x92\x0a\x52\x59\x40\x02\x24\x8e\x11\xa8\x68\x7b\x22\x18\x69\x63\x09\xa5\x28\x55\x5c\xdb\x52\x9f\xbe\xa0\xa5\x00\x39\xf4\xc6\x1d\xf2\x1b\xce\xac\xbc\x1d\x5b\x0b\x27\x1a\x7c\xd3\x39\x85\x49\x7c\x85\x40\xae\xec\xaa\xc6\x1d\x14\x1e\xf9\x6d\xf5\x19\xe1\x36\x8d\xe4\x7f\xdb\xe7\xac\xf8\xb9\xcf\xa1\xe6\xd6\xc2\xfe\xdb\xd7\xc7\x87\x0c\x70\x25\xc4\xf7\xeb\x4c\x88\x6d\xb1\x85\x1f\xf7\xc5\xd3\x23\x24\x71\x22\x44\xbe\x43\xc0\x9a\xb9\xbf\x11\xe2\x7c\x3e\xc7\xe7\xeb\xb8\x1b\x0e\xa2\x78\x11\x63\xc0\x93\x24\x00\xef\xe7\xb8\xe2\x0a\xd3\x48\x5e\x8c\xc7\xd6\x3a\xaf\xfe\xc1\x26\x9b\xcd\x66\x26\x30\x3c\xba\xb1\x26\x04\xfc\x53\xaf\xb2\xdd\x05\x26\x53\xa5\x91\x6c\x89\x0d\x04\x78\x45\xbf\x8f\xcd\x49\x61\xd6\x39\x26\xc7\xab\x62\xea\x09\xa1\x9c\x27\x85\xa6\xef\x6d\x53\x1a\x6e\x3a\x37\x9b\xfe\x3f\xb6\xf6\x0b\x94\xb5\x19\x3c\xb1\x5a\x7a\x8b\x77\x47\x67\x5a\x52\x78\x20\x47\x83\xe1\x6e\xf8\x60\x94\x1b\x3f\xed\x8f\xaf\x70\x4a\xe2\x4f\x57\x33\xc1\x0d\x5b\x4a\x23\xad\x75\x76\x7f\xb7\x2f\xf2\x17\xfd\xb0\xd5\x5a\x47\x52\x2c\x37\xd2\x36\xee\x17\x0c\x64\x15\x7a\x9e\x2c\xf9\x9a\x88\x11\xea\x81\xde\x16\x25\x2e\xbd\x47\xe0\xa9\x27\x85\x4c\x23\x8b\x30\x07\x6f\xb1\xf4\x7c\xed\xaa\x29\x8d\xa4\x81\xa6\x52\xe8\xa9\x0c\x45\x30\x95\xc2\xa4\xb0\x88\x66\xe0\xa6\xb4\x34\x8b\x91\xac\xd7\x17\xf5\x92\x00\xa1\xb4\xc6\xfb\x65\xb2\x6b\x1f\xf6\xff\x21\xee\xee\xee\x29\xd7\x5a\x4b\x51\xaf\xe7\x1a\xcf\xbb\x22\xdf\x15\x73\x87\xe5\x67\x11\x96\x96\x46\x7f\x03\x00\x00\xff\xff\xfe\xd3\xaa\x5f\x3f\x02\x00\x00")

func tplsTpl_chapterHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_chapterHtml,
		"tpls/tpl_chapter.html",
	)
}

func tplsTpl_chapterHtml() (*asset, error) {
	bytes, err := tplsTpl_chapterHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_chapter.html", size: 575, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_contentOpf = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x5f\x8f\xa3\x36\x14\xc5\xdf\xf9\x14\x96\x5f\x2b\xf0\xcc\xaa\xd2\x56\x51\x60\x35\x93\xa5\x5a\xd4\x6e\x32\x9a\x64\x9f\x2d\xc7\xbe\x80\x77\x8d\xed\x1a\x33\x61\xfa\xe9\x2b\x1b\x42\x98\x4e\xff\x3c\x11\xfb\x9e\xf3\xbb\xc7\x17\x93\xed\xa7\xb1\x53\xe8\x05\x5c\x2f\x8d\xce\xf1\x7d\x76\x87\x11\x68\x6e\x84\xd4\x4d\x8e\x07\x5f\xa7\xbf\x60\xd4\x7b\xa6\x05\x53\x46\x43\x8e\xb5\xc1\x9f\x8a\x24\xd9\x5a\xc6\x7f\xb0\x06\x6e\xd6\x0f\xc1\x3a\x76\x4a\xf7\x39\x6e\xbd\xb7\x1b\x42\x2e\x97\x4b\x26\x85\xad\x33\xe3\x1a\xf2\xe1\xee\xee\x23\x31\xb6\xc6\x68\xd0\xf2\x8f\x01\x52\x29\x40\x7b\x59\x4b\x70\x39\x3e\x1b\xf3\x43\x0a\x5c\x24\xdb\x0e\x3c\x13\xcc\xb3\x22\xd9\x0a\x9e\x5e\x57\x13\x78\x23\xf8\xc2\xb6\x83\x53\x91\x2b\x38\x01\x05\x1d\x68\xdf\x93\xfb\xec\x9e\xcc\x21\x36\xc6\xd6\xff\x13\x24\xb6\xd8\xdc\x62\x20\x29\x6e\x49\x28\xa5\x8f\x87\xc3\x6f\xb4\xfa\x4c\x29\xdd\x92\x37\xc2\xc9\xe8\xa5\x57\xb0\xe8\xf6\x0f\x5f\xcb\xab\x72\xaa\x44\x11\x77\xc0\xbc\x71\xc8\xd8\x7a\x53\x4b\x05\x29\xeb\x73\x7c\xf5\x3c\x7c\x3b\x7d\x39\x3c\x53\x4a\x71\xac\x3b\xa3\x20\xc7\x6c\xf0\xb7\xee\x8b\x22\x72\x67\xd8\x44\x16\xcc\xc7\xee\xbb\xe7\xf2\xe1\x54\xd2\x53\x75\xeb\x1f\x4b\x93\x08\x7a\xee\xa4\xf5\xd2\xe8\xa0\xfd\x5c\x1e\x77\xcf\xd5\xd3\xa9\x3a\xec\x17\xed\x4a\xf1\xf7\x79\x84\x50\x3d\x6f\xa1\x83\x1c\x57\xc7\xc7\x7d\xc8\x15\x9e\xff\x32\x10\x3b\x9c\x95\xec\x5b\x70\xa1\xd5\xd3\xb7\xc7\xdf\xab\xe3\x97\x72\x09\x7f\xab\x46\xb1\x93\x4d\xeb\xfb\x62\x17\x8e\x04\x02\x5d\xa4\x6f\x51\x19\x86\x2f\xcc\x45\x2b\xc3\x04\x38\xf4\x72\x9f\x7d\xcc\x7e\x8e\xee\x59\x1e\xad\x8a\xe9\x66\x60\x0d\x14\x7f\xb6\xe9\x6e\x1f\xcb\xcb\x56\x12\x96\xe9\xea\x12\x85\x9f\x48\xb3\x70\x04\x6e\x5e\xc0\x61\xc4\x8d\xf6\xa0\x7d\x8e\x77\xd3\x9a\x14\xc9\x76\x5c\x5b\xcc\xe0\xed\xe0\xdf\x7d\x06\xc5\x96\x4c\x95\xd0\xe4\x8d\x81\xac\xfb\x31\x2d\x6b\xe8\x83\x48\x7a\xe8\xe2\x9d\xd2\x7c\xf4\x86\x63\xd4\x3a\xa8\x73\xec\x0d\xcf\x34\x1f\x31\xea\x40\x48\x96\xfa\x57\x1b\xde\xba\xb5\x4a\x72\x16\x5e\x03\x19\x53\xe1\xcf\x9a\x8f\x3f\x8d\x9d\xc2\x64\x0d\x6a\x7d\xa7\x22\x69\x46\x85\x79\xa5\x81\x17\x0a\xff\x01\x0c\xe5\xf7\x34\xde\xf7\xd7\x4c\xbd\x7f\x55\x90\xc5\x8d\x35\xc4\xc3\xe8\x49\xd8\x25\x45\x42\x29\xfd\xfa\xb0\xaf\x7e\x2d\x8f\x27\x4a\xe9\x0a\x33\x8f\x71\xed\x93\x1d\x6b\x80\x7c\xb7\xd0\x5c\x1b\xc4\xd9\x67\xdf\x6d\x13\x23\x90\xd5\x94\x7a\x2b\x35\x20\x6f\xf8\x32\xa7\x39\xa3\x83\x1a\x49\x11\xdd\xcb\xb9\x95\xd4\xc0\x5c\x8e\x5f\xe1\x9a\xe9\xf8\x54\xed\xcb\x18\x88\x44\x52\x91\x6c\x9b\x41\x8a\xf0\x74\x50\x83\x03\xcd\xe1\x9f\xa7\x35\x1f\x31\x60\xe3\x07\x9b\xe3\x13\x3b\x2b\x40\x87\x1a\xed\xa6\x2b\x12\x7b\xbc\xc3\xf0\x96\x59\x0f\xee\xee\x2d\x06\x46\xbf\x70\x1e\xa1\x91\x5a\x4b\x3d\x1f\xf6\x9a\x87\xcc\xff\x99\x45\xf2\x57\x00\x00\x00\xff\xff\x7a\x08\xc6\xdb\x76\x05\x00\x00")

func tplsTpl_contentOpfBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_contentOpf,
		"tpls/tpl_content.opf",
	)
}

func tplsTpl_contentOpf() (*asset, error) {
	bytes, err := tplsTpl_contentOpfBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_content.opf", size: 1398, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_coverHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xd1\x6e\x9b\x30\x14\x86\xef\x79\x0a\xef\xdc\x4e\xc1\xb5\xa2\x49\x4b\x87\xa9\x5a\x12\xa9\xd3\xda\x24\xaa\xa8\xb6\x5d\x21\x07\x4e\x03\xaa\xb1\x99\x7d\x42\x60\x4f\x3f\x39\x50\xad\x17\xbd\xf3\xb1\xfe\xef\x3b\xfe\x9d\xdc\x0c\xad\x66\x3d\x3a\xdf\x58\x23\x41\xc4\x57\xc0\xd0\x94\xb6\x6a\xcc\x51\xc2\x89\x5e\x16\x5f\x81\xdd\xa4\x51\xf2\x69\xbd\xcb\xf2\xdf\xfb\x0d\xab\xa9\xd5\x6c\xff\x7c\xf7\xf0\x3d\x63\xb0\xe0\xfc\xe7\x32\xe3\x7c\x9d\xaf\xd9\xaf\xfb\xfc\xf1\x81\x89\x58\x70\xbe\xd9\x02\x83\x9a\xa8\xbb\xe6\xfc\x7c\x3e\xc7\xe7\x65\x6c\xdd\x91\xe7\x4f\x7c\x08\xb8\x10\x01\x78\x3b\xc7\x15\x55\x90\x46\xc9\x45\x3c\xb4\xda\x78\xf9\x01\x2b\x56\xab\xd5\x44\x40\x08\x5d\x6b\x15\x1e\xf8\xb7\x5e\x64\xdb\x0b\x8c\xaa\x4a\xa3\xa4\x45\x52\x2c\xc0\x0b\xfc\x73\x6a\x7a\x09\x99\x35\x84\x86\x16\xf9\xd8\x21\xb0\x72\x9a\x24\xa8\xae\xd3\x4d\xa9\xa8\xb1\x66\x92\x7e\x1e\x5a\xfd\x8d\x95\xb5\x72\x1e\x49\xce\xbd\xf9\x9b\xd1\xa8\x16\x25\x1c\xd1\xa0\x53\x64\xdd\x3b\xd1\x46\xf9\x71\x7f\x3a\xb0\x5e\xc4\x5f\xae\x26\x82\x1a\xd2\x98\x46\x99\xed\xd1\x45\x09\x9f\xc7\x44\x37\xe6\x95\x39\xd4\x12\x3c\x8d\x1a\x7d\x8d\x48\xc0\x6a\x87\x2f\xf3\x4d\x5c\x7a\x0f\x8c\xc6\x0e\x25\x10\x0e\xc4\xc3\x1c\x84\x7c\x2e\x77\xb0\xd5\x98\x46\x49\xd5\xf4\xa1\xb0\x60\xa5\x56\xde\x4b\x38\x58\xfb\x7a\x59\x02\x69\x51\x14\x77\xbb\xdd\x8f\x62\x7b\xfb\xb8\x29\x8a\x22\xe1\xb5\x08\xd1\xe5\xfb\xa8\x3a\x51\x6d\xdd\xff\xec\xed\x73\x7e\xbf\x7b\x9a\xd2\xcb\xb0\x6d\xf2\xf3\x79\x1b\x0f\xbf\x93\x46\xff\x02\x00\x00\xff\xff\x35\xe9\x74\x5f\x28\x02\x00\x00")

func tplsTpl_coverHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_coverHtml,
		"tpls/tpl_cover.html",
	)
}

func tplsTpl_coverHtml() (*asset, error) {
	bytes, err := tplsTpl_coverHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_cover.html", size: 552, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_styleCss = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\xbd\x6e\xdb\x3a\x18\xdd\xf5\x14\x04\x82\x2c\x41\xe4\xe8\xc7\xf6\xbd\x96\x97\x7b\xeb\x06\x5d\xfb\x0a\x94\x48\xcb\x6c\x28\x51\x10\xe9\xda\x8e\x11\x20\x6d\x80\x26\xed\x92\x0e\x41\x97\x0e\xed\xd0\x21\x28\x90\xa1\x53\x3b\xf4\x71\x6a\x27\x7d\x8b\x42\x14\x6d\xc9\x0a\xe5\x34\x41\xd0\xd4\x00\x2d\x89\x1f\x7f\xce\x77\xce\xf9\xc8\x9d\x2d\x00\x9e\xe0\x18\xa7\x50\x60\x04\xfc\x09\xd8\x85\x7c\xf2\x74\xe8\x03\xb0\xb5\x63\x64\xc1\xf9\xc5\xa7\x80\xf3\xcb\xb3\x2f\x2a\x70\x75\xfc\x79\xf6\xe6\xfc\xf2\xec\xc3\xfc\xe4\xed\x72\xd0\xcf\xa3\xf3\xd9\xc9\xab\xd9\xe9\xcb\xab\xc3\xa3\xab\xc3\x17\x97\xaf\xdf\xff\xf8\x76\x31\x7f\x77\x3c\xff\xf8\x75\xf6\xfd\x54\x0e\x33\x0c\xc3\x67\x68\x02\xa6\xc0\x00\xf2\x97\x40\x84\x48\x1c\x7a\xc0\xea\xaa\x1e\x96\x26\x03\x18\xf3\x52\xcf\x88\x20\x36\xca\x3b\x0e\x0c\x23\x29\x26\x47\x30\x0d\x49\x6c\x52\xdc\x17\xa5\xe1\xaa\x37\x25\xe1\x40\xdc\x62\x5d\x44\x9e\x37\x02\x1c\x0b\x9c\x62\x44\x22\x18\x62\x30\x55\xe3\x04\x1e\x0b\x13\x52\x12\xc6\x5e\x3e\x60\xb1\x00\x22\x3c\xa1\x70\xe2\xf9\x94\x05\x7b\x95\xed\x05\x4b\x3c\x60\x35\x5a\x38\xaa\x04\x7c\x26\x04\x8b\x96\xb1\x03\xc3\x20\x51\xd8\x80\x42\x24\x24\x58\x6e\xe9\xb3\x14\xe1\xd4\x03\x76\x32\x06\x9c\x51\x82\xc0\x86\x25\x7f\xab\x8b\x2d\xb0\x37\x7c\xc6\xf6\x04\x11\xb4\x00\x5d\x86\xe1\x5a\x9b\x75\x20\xba\x2b\x1b\x9a\x5c\x4c\x28\xf6\x40\xcc\x62\xac\xf6\x95\xaf\xd9\x5f\x65\xe4\x88\x20\x31\xf0\x40\xcb\x4a\xc6\x95\x48\xc0\x28\x4b\x3d\xb0\xd1\xdc\x6d\x75\x9a\x8f\x17\xc1\x3e\x8b\x85\xc9\xc9\x3e\xf6\x80\x5b\x70\x42\x49\x8c\xcd\x01\xce\xa5\xb2\x9d\x02\x67\x89\x73\x20\x95\x2c\xf2\x84\x43\x31\x60\xa9\x36\xd1\x3f\x97\x4e\x02\x43\x6c\xfa\x29\x86\x7b\x26\xec\x8b\x4c\x2a\x48\x47\x70\xc2\x35\xe9\x52\x98\x86\xf8\x8e\x09\xff\x17\x61\x44\x20\x88\x99\x00\x30\xda\x8f\xcd\x88\xf9\x04\x4c\x8d\x86\xd4\x5a\xb0\x60\x1b\xe4\xaf\xd4\x16\x2c\x29\x3e\xb8\x40\xdb\xea\xdd\x29\x07\x9c\x52\xc0\x2d\x07\xdc\x52\xa0\xc9\x05\x5a\xcf\x6e\xc5\x44\x76\xc3\x29\x14\xd5\x30\x2f\xff\x10\x13\xd9\xd9\x52\x4f\xbd\x95\x8c\x65\xb3\xf3\x67\x8d\x0a\x3d\xbb\xd7\xeb\x59\xdd\xea\xe9\x61\xcb\xd9\xea\xa1\xd1\x60\x6c\xae\x53\xa1\xa5\x55\x61\xb5\xd6\x65\x84\x0f\x20\x62\xa3\xbc\x2c\x17\x6d\xc3\x75\xdd\xdc\x9c\x0b\xf2\x49\x1c\x52\xbc\xe4\x7f\xf5\xd3\xcd\x3f\xf5\x65\x5a\xe0\xb8\xab\x7f\xdd\xdf\xf7\xaf\x62\x2e\x9b\x01\x5a\x45\xbb\x2d\x79\xf6\x0d\x16\x2e\x4c\xfc\x17\x19\x58\x65\x9f\xf7\x3a\xd6\xed\xb3\xbe\xc1\x32\xf7\xec\x86\x5a\xc6\xeb\xe1\xea\x51\x49\x5c\x2c\xa8\xee\x27\x2f\x50\xdb\xd9\xac\x9a\xa3\x44\x4c\x19\x82\xed\xea\x35\x7f\x36\xe4\x82\xf4\x27\xdd\xe5\x36\x10\x4c\xf3\x01\x08\x07\x2c\x85\x82\xb0\x38\x37\x73\x17\x2c\x5c\xa9\x6e\x35\xa0\xa6\x50\x5b\xc7\x85\xee\x1a\x95\x98\x4d\x8d\xdf\xcb\x35\x83\xd8\xd0\xa7\xcb\x87\xac\xa0\xfa\xc3\x27\x2b\x00\x27\x6b\xf5\x35\xd4\x7e\xf4\x4f\xbb\xfd\xbf\x5e\x96\x92\x5e\x25\x59\x6c\x37\xa3\x75\x91\x9d\xa3\xb7\x65\x6d\x7a\x1a\x28\xd7\x0e\xd6\x6b\x27\x42\xc5\xa9\xae\x16\x96\xbc\x79\x0e\x0c\x85\xcb\xbd\x5f\x5c\x8a\xef\xe2\xd8\xaa\x27\xdd\x51\xa7\xfe\xbf\xb5\x9c\x77\xdc\xce\x6e\xc7\xa9\x29\x05\x47\x9b\x9c\xd5\x29\x71\xde\x7c\xf0\xdc\xda\x77\xcb\x4d\xef\x27\x5b\x09\xd7\xe0\x43\xbf\xb6\x94\x5b\xeb\x4a\xb9\xb6\x64\xf3\x15\x29\xe1\xe2\xc1\x29\xb3\xeb\x6b\x70\x1d\x67\x37\x98\xfd\x57\x00\x00\x00\xff\xff\x52\x6c\x98\x1e\xe7\x0c\x00\x00")

func tplsTpl_styleCssBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_styleCss,
		"tpls/tpl_style.css",
	)
}

func tplsTpl_styleCss() (*asset, error) {
	bytes, err := tplsTpl_styleCssBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_style.css", size: 3303, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_tocNcx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x8e\x9b\x30\x14\x86\xf7\x3e\x85\xeb\x3d\x38\xa4\x4a\x35\x1d\x19\x46\x99\x24\x52\x47\x9d\x01\xd4\x66\x2a\x75\x65\x19\xdb\x4d\x50\xc1\x0f\xc1\x23\x21\xbd\x47\x57\xbd\x43\x6f\xd0\xe3\x54\xbd\x46\x45\x98\xb4\x4c\x94\xc5\xec\xc0\xfe\xbe\xdf\xef\x07\x8b\x9b\xae\x2c\xe8\xce\xd6\x4d\x0e\x2e\x64\x81\x3f\x61\xd4\x3a\x0d\x26\x77\x9b\x90\xb5\xf8\xc5\xbb\x62\xb4\x41\xe5\x8c\x2a\xc0\xd9\x90\x39\x60\x37\x11\x11\xaf\x96\xc9\x62\xfd\x39\x5d\x51\xa7\x3b\x9a\x3e\xde\xde\xdf\x2d\x28\xf3\x38\x8f\xef\x3e\x26\x9c\x2f\xd7\xcb\xe3\xc6\x74\x32\x99\x79\x01\xe7\xab\x98\x51\xb6\x45\xac\xae\x39\xdf\xef\xf7\xbe\x51\x79\x73\xf0\xa1\xde\xf0\x6f\xaf\xdf\x5e\xbd\xe1\x3d\xc7\x9d\xee\xbc\x41\xf0\x0d\x1a\x16\x11\xd1\x47\x74\x65\xe1\x9a\xf0\x25\x32\x67\xff\x7b\x0c\x39\x7d\xc6\xd6\x2a\x13\x11\x51\x5a\x54\xd4\xa9\xd2\x86\x4c\xc3\xce\xd6\x8c\x6a\x70\x68\x1d\x9e\xde\xf9\x73\xc8\x60\x76\xdd\xe6\x66\x84\x59\xd5\x1c\xaa\x36\xf3\xb4\xce\x82\xe9\x4c\x19\x46\x2f\x28\xc6\x56\xb8\x1d\x49\xc1\xa5\xdc\x8d\x75\xb6\x56\x08\xe3\x21\x56\xaa\x39\xa4\x6d\x46\x77\x81\x3f\x9b\x5c\x92\x10\x50\x15\xa9\xda\xd8\x05\xb4\x0e\x47\xe6\x45\xba\x54\x5d\xcf\xc6\x6d\x99\x3d\xeb\x3a\xc0\x7c\xf8\x28\x44\x18\xd0\xeb\x1c\x0b\x1b\x11\x81\xb6\xc3\x48\x4a\x79\x9b\x24\xef\x65\x3c\x7f\x58\x49\x29\x05\x3f\xae\x12\xc1\x47\xa0\x01\x3d\x6f\x71\x0b\xf5\xb9\x34\x7f\x5c\xbf\x4b\x3e\x9c\x6b\x27\x96\x08\xa7\x76\x0f\xaa\x8a\x8e\x0f\x29\xe4\x0e\x69\x6e\xfa\x1f\x5b\x16\x08\x9a\xd1\xaa\x50\x87\xa4\x36\xb6\x0e\xd9\x94\x0d\xd4\xbd\xca\x6c\x11\x0d\xa7\xfc\xf9\xf1\xf3\xf7\xaf\xef\x4f\xd1\x82\xff\xdb\x25\xe2\xa9\x1c\x6d\x6a\x1d\xb2\x0c\xe0\xab\x87\xa0\xfd\x3e\x77\x28\x7b\x3a\x2e\x22\x44\x4a\x19\xcf\x3f\x49\x29\xc9\xb0\x3e\xcc\xd3\x5f\x9e\x88\xfc\x0d\x00\x00\xff\xff\x48\x95\x60\xf8\x0a\x03\x00\x00")

func tplsTpl_tocNcxBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_tocNcx,
		"tpls/tpl_toc.ncx",
	)
}

func tplsTpl_tocNcx() (*asset, error) {
	bytes, err := tplsTpl_tocNcxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_toc.ncx", size: 778, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tplsTpl_volumeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x6e\xdb\x30\x10\x84\xef\x7a\x8a\xed\x5e\x0b\x8b\x21\x82\x02\x4d\x4a\x32\x68\x65\x01\x0d\x60\x3b\x46\xa1\xf4\xe7\x44\x30\xd2\xc6\x12\x4a\x51\xaa\x48\xdb\x52\x9f\xbe\xa0\x25\xa3\x3d\xf4\xc6\x1d\xee\x37\x98\x59\xf1\x30\xb6\x16\x4e\x34\xf8\xa6\x73\x12\x79\x7a\x83\x40\xae\xec\xaa\xc6\x1d\x24\x1e\xc3\xeb\xea\x3d\xc2\x83\x4a\xc4\x9b\xf5\x53\x56\xfc\xd8\xe7\x50\x87\xd6\xc2\xfe\xf9\xd3\xe6\x31\x03\x5c\x31\xf6\xed\x36\x63\x6c\x5d\xac\xe1\xfb\xe7\x62\xbb\x01\x9e\x72\xc6\xf2\x1d\x02\xd6\x21\xf4\xf7\x8c\x9d\xcf\xe7\xf4\x7c\x9b\x76\xc3\x81\x15\x5f\xd8\x18\x71\xce\x23\x70\x7d\xa7\x55\xa8\x50\x25\xe2\x62\x3c\xb6\xd6\x79\xf9\x1f\x96\xdf\xdd\xdd\xcd\x04\xc6\xa5\x7b\x6b\x62\xc0\xdf\xf5\x2a\xdb\x5d\x60\x32\x95\x4a\x44\x4b\xc1\x40\x84\x57\xf4\xeb\xd8\x9c\x24\x66\x9d\x0b\xe4\xc2\xaa\x98\x7a\x42\x28\xe7\x49\xa2\xe9\x7b\xdb\x94\x26\x34\x9d\x9b\x4d\xdf\x8e\xad\xfd\x00\x65\x6d\x06\x4f\x41\x2e\xbd\xd9\xd5\xd1\x99\x96\x24\x1e\xc8\xd1\x60\x42\x37\xfc\x63\x94\x1b\x3f\xed\x8f\x2f\x70\xe2\xe9\xbb\x9b\x99\x08\x4d\xb0\xa4\x12\xad\xf5\xd7\xa7\xcd\xf3\x36\xd7\x8f\x6b\xad\x75\x22\xd8\xf2\x21\x6c\xe3\x7e\xc2\x40\x56\xa2\x0f\x93\x25\x5f\x13\x05\x84\x7a\xa0\xd7\x45\x49\x4b\xef\x11\xc2\xd4\x93\xc4\x40\x63\x60\x71\x8e\xd6\x6c\xa9\xf9\xd2\x55\x93\x4a\x84\x81\xa6\x92\xe8\xa9\x8c\x3d\x50\x09\x66\x14\x2c\xa2\x19\x42\x53\x5a\x9a\xc5\x44\xd4\xfc\xa2\x5e\x12\x20\x94\xd6\x78\xbf\x4c\x96\xfb\x78\xfe\xbf\x69\x77\x1f\xb7\xb9\xd6\x5a\xb0\x9a\xab\x44\xf4\xd7\x65\x83\x0a\x00\x40\xb0\x3e\xe6\x58\x02\xb0\x78\x3a\x95\xfc\x09\x00\x00\xff\xff\xe3\x4c\x6d\xf4\x45\x02\x00\x00")

func tplsTpl_volumeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_tplsTpl_volumeHtml,
		"tpls/tpl_volume.html",
	)
}

func tplsTpl_volumeHtml() (*asset, error) {
	bytes, err := tplsTpl_volumeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tpls/tpl_volume.html", size: 581, mode: os.FileMode(436), modTime: time.Unix(1608900943, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"tpls/cover.jpg":         tplsCoverJpg,
	"tpls/epub_cover.css":    tplsEpub_coverCss,
	"tpls/tpl_book_toc.html": tplsTpl_book_tocHtml,
	"tpls/tpl_chapter.html":  tplsTpl_chapterHtml,
	"tpls/tpl_content.opf":   tplsTpl_contentOpf,
	"tpls/tpl_cover.html":    tplsTpl_coverHtml,
	"tpls/tpl_style.css":     tplsTpl_styleCss,
	"tpls/tpl_toc.ncx":       tplsTpl_tocNcx,
	"tpls/tpl_volume.html":   tplsTpl_volumeHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"tpls": &bintree{nil, map[string]*bintree{
		"cover.jpg":         &bintree{tplsCoverJpg, map[string]*bintree{}},
		"epub_cover.css":    &bintree{tplsEpub_coverCss, map[string]*bintree{}},
		"tpl_book_toc.html": &bintree{tplsTpl_book_tocHtml, map[string]*bintree{}},
		"tpl_chapter.html":  &bintree{tplsTpl_chapterHtml, map[string]*bintree{}},
		"tpl_content.opf":   &bintree{tplsTpl_contentOpf, map[string]*bintree{}},
		"tpl_cover.html":    &bintree{tplsTpl_coverHtml, map[string]*bintree{}},
		"tpl_style.css":     &bintree{tplsTpl_styleCss, map[string]*bintree{}},
		"tpl_toc.ncx":       &bintree{tplsTpl_tocNcx, map[string]*bintree{}},
		"tpl_volume.html":   &bintree{tplsTpl_volumeHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
